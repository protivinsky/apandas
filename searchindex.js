Search.setIndex({"docnames": ["api/acolumn", "api/aframe", "api/afunction", "api/ameta", "api/aseries", "index"], "filenames": ["api/acolumn.rst", "api/aframe.rst", "api/afunction.rst", "api/ameta.rst", "api/aseries.rst", "index.rst"], "titles": ["AColumn", "AFrame", "AFunction", "AMeta", "ASeries", "APandas: Lightweight wrapper to support custom analytics in Pandas"], "terms": {"class": [0, 1, 2, 3, 4], "apanda": [0, 1, 2, 3, 4], "name": [0, 2, 3, 5], "str": [0, 2], "func": [0, 2], "afunct": [0, 5], "callabl": [0, 2], "ani": [0, 2], "none": [0, 2], "overrid": 0, "bool": [0, 2], "fals": [0, 1, 2], "just": [0, 5], "function": [0, 2, 5], "can": [0, 2, 5], "access": [0, 5], "construct": 0, "fly": [0, 1, 5], "need": [0, 3, 5], "from": [0, 5], "an": [0, 2], "afram": [0, 2, 3, 4, 5], "No": 0, "check": 0, "i": [0, 1, 3, 4, 5], "done": 0, "shape": 0, "conform": 0, "datafram": [0, 1, 2, 4, 5], "henc": 0, "ad": [0, 5], "cach": 0, "frame": [0, 2], "calcul": [0, 1, 5], "from_fram": [0, 2], "af": [0, 2, 5], "arg": [1, 2, 4], "verbos": 1, "kwarg": [1, 2, 4], "subclass": [1, 4], "panda": [1, 2], "allow": [1, 4, 5], "us": [1, 2, 3, 4, 5], "acolumn": [1, 3, 4, 5], "object": 1, "kei": 1, "them": 1, "definit": [1, 5], "all": [1, 3], "ar": [1, 3, 5], "actual": 1, "string": [1, 3], "modifi": [1, 3], "pd": [1, 2, 4], "method": [1, 2, 3, 4], "so": [1, 3], "thei": [1, 3, 5], "handl": 1, "convers": 1, "possibli": 1, "creat": [1, 5], "column": [1, 2, 3, 5], "intern": 1, "most": [1, 5], "via": [1, 4], "metaclass": [1, 3], "particular": 1, "call": 1, "convert": [1, 4], "don": 1, "t": 1, "exist": 1, "In": 1, "addit": 1, "return": [1, 4], "__init__": [1, 4], "add_acolumn": 1, "acol": 1, "gener": 1, "to_panda": [1, 4], "unwrap": [1, 4], "repres": 2, "appli": 2, "cumprod": 2, "axi": 2, "int": 2, "liter": 2, "index": 2, "row": 2, "skipna": 2, "true": 2, "wrapper": 2, "seri": [2, 4], "see": [2, 5], "doc": 2, "http": [2, 5], "pydata": 2, "org": [2, 5], "refer": 2, "api": 2, "html": 2, "cumsum": 2, "diff": 2, "period": 2, "1": [2, 5], "fillna": 2, "valu": 2, "hashabl": 2, "map": 2, "fillnaopt": 2, "inplac": 2, "limit": 2, "downcast": 2, "dict": 2, "static": 2, "function_wrapp": 2, "replac": 2, "to_replac": 2, "_nodefault": 2, "no_default": 2, "regex": 2, "type": 2, "pad": 2, "ffill": 2, "bfill": 2, "round": 2, "decim": 2, "0": 2, "anamedfunct": 2, "A": [2, 3], "contain": 2, "custom": 2, "oper": [2, 5], "where": 2, "result": 2, "cannot": 2, "includ": [2, 5], "back": 2, "origin": 2, "filter": 2, "groupbi": 2, "aggreg": 2, "base": 3, "attr": 3, "aframegroupbi": 3, "parent": 3, "compat": 3, "argument": 3, "instead": 3, "admittedli": 3, "thi": [3, 5], "bit": 3, "hacki": 3, "doe": 3, "what": 3, "renam": 4, "when": 4, "instanc": [4, 5], "reset_index": 4, "separ": 5, "between": 5, "its": 5, "The": 5, "compos": 5, "If": 5, "have": 5, "yet": 5, "been": 5, "depend": 5, "directli": 5, "leverag": 5, "intellisens": 5, "At": 5, "moment": 5, "onli": 5, "arithmet": 5, "mostli": 5, "proof": 5, "concept": 5, "It": 5, "should": 5, "easi": 5, "add": 5, "other": 5, "numpi": 5, "univers": 5, "complic": 5, "pass": 5, "lambda": 5, "defin": 5, "stand": 5, "import": 5, "you": 5, "begin": 5, "x": 5, "y": 5, "transform": 5, "u": 5, "v": 5, "z": 5, "2": 5, "3": 5, "now": 5, "final": 5, "comput": 5, "everyth": 5, "test": 5, "more": 5, "advanc": 5, "librari": 5, "avail": 5, "pypi": 5, "until": 5, "get": 5, "matur": 5, "stabl": 5, "To": 5, "run": 5, "pip": 5, "simpl": 5, "ameta": 5, "aseri": 5}, "objects": {"": [[5, 0, 0, "-", "apandas"]], "apandas": [[0, 1, 1, "", "AColumn"], [1, 1, 1, "", "AFrame"], [2, 1, 1, "", "AFunction"], [2, 1, 1, "", "ANamedFunction"], [4, 1, 1, "", "ASeries"]], "apandas.AColumn": [[0, 2, 1, "", "from_frame"]], "apandas.AFrame": [[1, 2, 1, "", "__init__"], [1, 2, 1, "", "add_acolumn"], [1, 2, 1, "", "to_pandas"]], "apandas.AFunction": [[2, 2, 1, "", "cumprod"], [2, 2, 1, "", "cumsum"], [2, 2, 1, "", "diff"], [2, 2, 1, "", "fillna"], [2, 2, 1, "", "from_frame"], [2, 2, 1, "", "function_wrapper"], [2, 2, 1, "", "replace"], [2, 2, 1, "", "round"]], "apandas.ANamedFunction": [[2, 2, 1, "", "from_frame"]], "apandas.ASeries": [[4, 2, 1, "", "__init__"], [4, 2, 1, "", "to_pandas"]], "apandas.aframe": [[3, 1, 1, "", "AMeta"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"]}, "titleterms": {"acolumn": 0, "afram": 1, "afunct": 2, "ameta": 3, "aseri": 4, "apanda": 5, "lightweight": 5, "wrapper": 5, "support": 5, "custom": 5, "analyt": 5, "panda": 5, "basic": 5, "exampl": 5, "instal": 5, "api": 5, "index": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"AColumn": [[0, "acolumn"]], "AFrame": [[1, "aframe"]], "AFunction": [[2, "afunction"]], "AMeta": [[3, "ameta"]], "ASeries": [[4, "aseries"]], "APandas: Lightweight wrapper to support custom analytics in Pandas": [[5, "module-apandas"]], "Basic example": [[5, "basic-example"]], "Installation": [[5, "installation"]], "API": [[5, null]], "Index": [[5, "index"]]}, "indexentries": {"acolumn (class in apandas)": [[0, "apandas.AColumn"]], "from_frame() (apandas.acolumn method)": [[0, "apandas.AColumn.from_frame"]], "aframe (class in apandas)": [[1, "apandas.AFrame"]], "__init__() (apandas.aframe method)": [[1, "apandas.AFrame.__init__"]], "add_acolumn() (apandas.aframe method)": [[1, "apandas.AFrame.add_acolumn"]], "to_pandas() (apandas.aframe method)": [[1, "apandas.AFrame.to_pandas"]], "afunction (class in apandas)": [[2, "apandas.AFunction"]], "anamedfunction (class in apandas)": [[2, "apandas.ANamedFunction"]], "cumprod() (apandas.afunction method)": [[2, "apandas.AFunction.cumprod"]], "cumsum() (apandas.afunction method)": [[2, "apandas.AFunction.cumsum"]], "diff() (apandas.afunction method)": [[2, "apandas.AFunction.diff"]], "fillna() (apandas.afunction method)": [[2, "apandas.AFunction.fillna"]], "from_frame() (apandas.afunction method)": [[2, "apandas.AFunction.from_frame"]], "from_frame() (apandas.anamedfunction method)": [[2, "apandas.ANamedFunction.from_frame"]], "function_wrapper() (apandas.afunction static method)": [[2, "apandas.AFunction.function_wrapper"]], "replace() (apandas.afunction method)": [[2, "apandas.AFunction.replace"]], "round() (apandas.afunction method)": [[2, "apandas.AFunction.round"]], "ameta (class in apandas.aframe)": [[3, "apandas.aframe.AMeta"]], "aseries (class in apandas)": [[4, "apandas.ASeries"]], "__init__() (apandas.aseries method)": [[4, "apandas.ASeries.__init__"]], "to_pandas() (apandas.aseries method)": [[4, "apandas.ASeries.to_pandas"]], "apandas": [[5, "module-apandas"]], "module": [[5, "module-apandas"]]}})